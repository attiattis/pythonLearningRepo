{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2021-10-18T14:18:31.848339Z","iopub.execute_input":"2021-10-18T14:18:31.848853Z","iopub.status.idle":"2021-10-18T14:18:31.874087Z","shell.execute_reply.started":"2021-10-18T14:18:31.848763Z","shell.execute_reply":"2021-10-18T14:18:31.873408Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"import random\ndoors=[0]*3\ngoatdoor=[0]*2\nswap=0\ndont_swap=0\nx=random.randint(0,2)\ndoors[x]='BMW'\nwhile (j<10):\n    for i in range(0,3):\n        if(i==x):\n            continue\n        else:\n            doors[i]='Goat'\n            goatdoor.append(i)\n    choice=int(input(\"Enter your choice \"))\n    door_open=random.choice(goatdoor)\n    while(door_open==choice):\n        door_open=random.choice(goatdoor)\n    ch= input(\"Do you want to swap y/n \")\n    if(ch=='y'):\n        if(doors_choice=='Goat'):\n            print('Player wins')\n            swap=swap+1\n        else:\n            print(\"Player lost\")\n    else:\n        if(doors_choice=='Goat'):\n            print('Player lost')\n        else:\n            print('Player wins')\n            dont_swap=dont_swap+1\nprint(swap)\nprint(dont_swap)\n        ","metadata":{"execution":{"iopub.status.busy":"2021-10-18T14:20:19.767044Z","iopub.execute_input":"2021-10-18T14:20:19.767349Z","iopub.status.idle":"2021-10-18T14:20:19.843223Z","shell.execute_reply.started":"2021-10-18T14:20:19.767318Z","shell.execute_reply":"2021-10-18T14:20:19.841732Z"},"trusted":true},"execution_count":3,"outputs":[]}]}